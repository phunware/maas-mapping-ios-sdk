// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios15.5 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PWMapKit
import DeveloperToolsSupport
import Foundation
import PWCore
@_exported import PWMapKit
import PWMapKit.Private
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension PWRoute {
  public static func createRoute(from: PWMapPoint, to: PWMapPoint, options: PWRouteOptions? = nil, resultQueue: DispatchQueue = .main, completion: @escaping (Result<PWRoute, Error>) -> Void)
  public static func getShortestDistancesToAllPOIs(from startPoint: PWMapPoint, options: PWRouteOptions? = nil, resultQueue: DispatchQueue = .main, completion: @escaping (Result<[Int : Double], Error>) -> Void)
}
extension PWRoute {
  public func getShortestDistanceToDestination(from startPoint: PWMapPoint, resultQueue: DispatchQueue = .main, completion: @escaping (Result<CLLocationDistance, Error>) -> Void)
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class PWCampus : NSObject {
  @objc final public let identifier: Int
  @objc final public let name: String?
  @objc final public let buildings: [PWBuilding]?
  @objc final public let floors: [PWFloor]?
  @objc final public let pois: [PWPointOfInterest]?
  @objc final public let pointOfInterestTypes: [PWPointOfInterestType]?
  @objc final public let routePoints: [String : PWMapPoint]?
  @objc final public let routeSegments: [String : [String : NSNumber]]?
  @objc final public let userInfo: [AnyHashable : Any]?
  @objc public static let campusIdentifierNotFound: Swift.Int
  @objc public var overviewBuilding: PWBuilding? {
    @objc get
  }
  @objc @available(*, deprecated, message: "Use PWCampus.campus(identifier: Int, resultQueue: DispatchQueue, completion: Result<PWCampus, Error>) instead")
  public static func campus(identifier: Int, completion: @escaping (_ campus: PWCampus?, _ error: Error?) -> Void)
  @objc public func floorById(_ identifier: Int) -> PWFloor?
  @objc public func buildingById(_ identifier: Int) -> PWBuilding?
  @objc deinit
}
extension PWCampus {
  public static func campus(identifier: Int, resultQueue: DispatchQueue = .main, completion: @escaping (Result<PWCampus, Error>) -> Void)
}
extension UIImage {
  @objc convenience dynamic public init?(namedForFramework: String)
}
extension PWBuilding {
  public static let defaultCacheFallbackTimeout: Swift.Double
  public static func building(identifier: Int, cacheFallbackTimeout: TimeInterval = PWBuilding.defaultCacheFallbackTimeout, resultQueue: DispatchQueue = .main, completion: @escaping (Result<PWBuilding, Error>) -> Void)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class PWCampusManager : NSObject {
  @objc public static func campus(identifier: Int, usePreviouslyLoadedCampus: Bool = false, success: @escaping (PWCampus) -> Void, failure: @escaping (Error) -> Void)
  @objc public static func isCampusLoaded(identifier: Int) -> Bool
  @objc deinit
}
extension PWCampusManager {
  @objc public static func weightedDistanceForPortalSegment(from startPOI: PWPointOfInterest, to endPOI: PWPointOfInterest) -> Double
}
