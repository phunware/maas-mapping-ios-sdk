// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PWMapKit
import Foundation
import PWCore
@_exported import PWMapKit
import PWMapKit.Private
import Swift
extension PWRoute {
  public static func createRoute(from: PWMapPoint, to: PWMapPoint, options: PWRouteOptions? = nil, resultQueue: Dispatch.DispatchQueue = .main, completion: @escaping (Swift.Result<PWRoute, Swift.Error>) -> Swift.Void)
  public static func getDistances(from startPoint: PWMapPoint, options: PWRouteOptions? = nil, resultQueue: Dispatch.DispatchQueue = .main, completion: @escaping (Swift.Result<[Swift.Int : Swift.Double], Swift.Error>) -> Swift.Void)
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class PWCampus : ObjectiveC.NSObject {
  @objc final public let identifier: Swift.Int
  @objc final public let name: Swift.String?
  @objc final public let buildings: [PWBuilding]?
  @objc final public let floors: [PWFloor]?
  @objc final public let pois: [PWPointOfInterest]?
  @objc final public let pointOfInterestTypes: [PWPointOfInterestType]?
  @objc final public let routePoints: [Swift.String : PWMapPoint]?
  @objc final public let routeSegments: [Swift.String : [Swift.String : Foundation.NSNumber]]?
  @objc final public let userInfo: [Swift.AnyHashable : Any]?
  @objc public static let campusIdentifierNotFound: Swift.Int
  @objc public var overviewBuilding: PWBuilding? {
    @objc get
  }
  @objc @available(*, deprecated, message: "Use PWCampus.campus(identifier: Int, resultQueue: DispatchQueue, completion: Result<PWCampus, Error>) instead")
  public static func campus(identifier: Swift.Int, completion: @escaping (PWCampus?, Swift.Error?) -> Swift.Void)
  @objc public func floorById(_ identifier: Swift.Int) -> PWFloor?
  @objc public func buildingById(_ identifier: Swift.Int) -> PWBuilding?
  @objc deinit
  @objc override dynamic public init()
}
extension PWCampus {
  public static func campus(identifier: Swift.Int, resultQueue: Dispatch.DispatchQueue = .main, completion: @escaping (Swift.Result<PWCampus, Swift.Error>) -> Swift.Void)
}
extension UIImage {
  @objc convenience dynamic public init?(namedForFramework: Swift.String)
}
extension PWBuilding {
  public static let defaultCacheFallbackTimeout: Swift.Double
  public static func building(identifier: Swift.Int, cacheFallbackTimeout: Foundation.TimeInterval = PWBuilding.defaultCacheFallbackTimeout, resultQueue: Dispatch.DispatchQueue = .main, completion: @escaping (Swift.Result<PWBuilding, Swift.Error>) -> Swift.Void)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class PWCampusManager : ObjectiveC.NSObject {
  @objc public static func campus(identifier: Swift.Int, usePreviouslyLoadedCampus: Swift.Bool = false, success: @escaping (PWCampus) -> Swift.Void, failure: @escaping (Swift.Error) -> Swift.Void)
  @objc public static func isCampusLoaded(identifier: Swift.Int) -> Swift.Bool
  @objc deinit
}
