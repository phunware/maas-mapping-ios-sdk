<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PWMapView.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PWMapView</TokenIdentifier>
			<Abstract type="html">A PWMapView object provides an embeddable map interface. It is similar to the one provided by the maps application but is specifically tailored to indoor maps. PWMapView subclasses MKMapView to provide a convenient interface that downloads, stores and displays indoor maps and associated points of interest (POIs). Usage of this class is optional but recommended for basic indoor map implementations. For more control, please refer to PWBuildingOverlay and PWRouteOverlay,  which PWMapView is built upon.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate for the map. The PWMapViewDelegate inherits from MKMapViewDelegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;PWMapViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/delegate</TokenIdentifier>
			<Abstract type="html">The delegate for the map. The PWMapViewDelegate inherits from MKMapViewDelegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;PWMapViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/delegate</TokenIdentifier>
			<Abstract type="html">The delegate for the map. The PWMapViewDelegate inherits from MKMapViewDelegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;PWMapViewDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setLocationSharingDelegate:</TokenIdentifier>
			<Abstract type="html">The location sharing delegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;PWLocationSharingDelegate&gt; locationSharingDelegate</Declaration>
			
			
			<Anchor>//api/name/locationSharingDelegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/locationSharingDelegate</TokenIdentifier>
			<Abstract type="html">The location sharing delegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;PWLocationSharingDelegate&gt; locationSharingDelegate</Declaration>
			
			
			<Anchor>//api/name/locationSharingDelegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/locationSharingDelegate</TokenIdentifier>
			<Abstract type="html">The location sharing delegate.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;PWLocationSharingDelegate&gt; locationSharingDelegate</Declaration>
			
			
			<Anchor>//api/name/locationSharingDelegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setBuilding:</TokenIdentifier>
			<Abstract type="html">The PWBuilding object associated with the current map. If no building is associated with the PWMapView, the building will be nil.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWBuilding *building</Declaration>
			
			
			<Anchor>//api/name/building</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/building</TokenIdentifier>
			<Abstract type="html">The PWBuilding object associated with the current map. If no building is associated with the PWMapView, the building will be nil.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWBuilding *building</Declaration>
			
			
			<Anchor>//api/name/building</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/building</TokenIdentifier>
			<Abstract type="html">The PWBuilding object associated with the current map. If no building is associated with the PWMapView, the building will be nil.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWBuilding *building</Declaration>
			
			
			<Anchor>//api/name/building</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCurrentFloor:</TokenIdentifier>
			<Abstract type="html">Returns the currently displayed PWFloor object. This property may be nil if no floor is displayed. Attempts to change to the same floor are ignored. When the floor change is complete, the delegate will receive a mapView:didChangeFloor: callback.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWFloor *currentFloor</Declaration>
			
			
			<Anchor>//api/name/currentFloor</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/currentFloor</TokenIdentifier>
			<Abstract type="html">Returns the currently displayed PWFloor object. This property may be nil if no floor is displayed. Attempts to change to the same floor are ignored. When the floor change is complete, the delegate will receive a mapView:didChangeFloor: callback.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWFloor *currentFloor</Declaration>
			
			
			<Anchor>//api/name/currentFloor</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/currentFloor</TokenIdentifier>
			<Abstract type="html">Returns the currently displayed PWFloor object. This property may be nil if no floor is displayed. Attempts to change to the same floor are ignored. When the floor change is complete, the delegate will receive a mapView:didChangeFloor: callback.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWFloor *currentFloor</Declaration>
			
			
			<Anchor>//api/name/currentFloor</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCurrentRoute:</TokenIdentifier>
			<Abstract type="html">The current PWRoute object plotted on the map. This property will be nil if no route is displayed.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWRoute *currentRoute</Declaration>
			
			
			<Anchor>//api/name/currentRoute</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/currentRoute</TokenIdentifier>
			<Abstract type="html">The current PWRoute object plotted on the map. This property will be nil if no route is displayed.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWRoute *currentRoute</Declaration>
			
			
			<Anchor>//api/name/currentRoute</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/currentRoute</TokenIdentifier>
			<Abstract type="html">The current PWRoute object plotted on the map. This property will be nil if no route is displayed.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWRoute *currentRoute</Declaration>
			
			
			<Anchor>//api/name/currentRoute</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setIndoorUserLocationVisible:</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the device’s current indoor location is visible in the map view. (read-only)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isIndoorUserLocationVisible) BOOL indoorUserLocationVisible</Declaration>
			
			
			<Anchor>//api/name/indoorUserLocationVisible</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/isIndoorUserLocationVisible</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the device’s current indoor location is visible in the map view. (read-only)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isIndoorUserLocationVisible) BOOL indoorUserLocationVisible</Declaration>
			
			
			<Anchor>//api/name/indoorUserLocationVisible</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/indoorUserLocationVisible</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the device’s current indoor location is visible in the map view. (read-only)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isIndoorUserLocationVisible) BOOL indoorUserLocationVisible</Declaration>
			
			
			<Anchor>//api/name/indoorUserLocationVisible</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setShowsIndoorUserLocation:</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the map should try to display the user’s indoor location. In order to display the user&apos;s indoor location, a PWLocationManager object must be registered with the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL showsIndoorUserLocation</Declaration>
			
			
			<Anchor>//api/name/showsIndoorUserLocation</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/showsIndoorUserLocation</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the map should try to display the user’s indoor location. In order to display the user&apos;s indoor location, a PWLocationManager object must be registered with the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL showsIndoorUserLocation</Declaration>
			
			
			<Anchor>//api/name/showsIndoorUserLocation</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/showsIndoorUserLocation</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the map should try to display the user’s indoor location. In order to display the user&apos;s indoor location, a PWLocationManager object must be registered with the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL showsIndoorUserLocation</Declaration>
			
			
			<Anchor>//api/name/showsIndoorUserLocation</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setFloorTransitionModeEnabled:</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the map should hide blue dot when atmospheric pressure changes indicate a floor transition. Not recommended for most setups and disabled by default.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL floorTransitionModeEnabled</Declaration>
			
			
			<Anchor>//api/name/floorTransitionModeEnabled</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/floorTransitionModeEnabled</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the map should hide blue dot when atmospheric pressure changes indicate a floor transition. Not recommended for most setups and disabled by default.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL floorTransitionModeEnabled</Declaration>
			
			
			<Anchor>//api/name/floorTransitionModeEnabled</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/floorTransitionModeEnabled</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether the map should hide blue dot when atmospheric pressure changes indicate a floor transition. Not recommended for most setups and disabled by default.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL floorTransitionModeEnabled</Declaration>
			
			
			<Anchor>//api/name/floorTransitionModeEnabled</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setIndoorUserLocation:</TokenIdentifier>
			<Abstract type="html">The object representing the user’s current indoor location. (read-only)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWUserLocation *indoorUserLocation</Declaration>
			
			
			<Anchor>//api/name/indoorUserLocation</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/indoorUserLocation</TokenIdentifier>
			<Abstract type="html">The object representing the user’s current indoor location. (read-only)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWUserLocation *indoorUserLocation</Declaration>
			
			
			<Anchor>//api/name/indoorUserLocation</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/indoorUserLocation</TokenIdentifier>
			<Abstract type="html">The object representing the user’s current indoor location. (read-only)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PWUserLocation *indoorUserLocation</Declaration>
			
			
			<Anchor>//api/name/indoorUserLocation</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setTrackingMode:</TokenIdentifier>
			<Abstract type="html">The mode used to track the user&apos;s indoor location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWTrackingMode trackingMode</Declaration>
			
			
			<Anchor>//api/name/trackingMode</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/trackingMode</TokenIdentifier>
			<Abstract type="html">The mode used to track the user&apos;s indoor location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWTrackingMode trackingMode</Declaration>
			
			
			<Anchor>//api/name/trackingMode</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/trackingMode</TokenIdentifier>
			<Abstract type="html">The mode used to track the user&apos;s indoor location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWTrackingMode trackingMode</Declaration>
			
			
			<Anchor>//api/name/trackingMode</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setBlueDotSmoothingEnabled:</TokenIdentifier>
			<Abstract type="html">Determines whether or not blue dot smoothing is used to provide a better visual experience when displaying the user&apos;s location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL blueDotSmoothingEnabled</Declaration>
			
			
			<Anchor>//api/name/blueDotSmoothingEnabled</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/blueDotSmoothingEnabled</TokenIdentifier>
			<Abstract type="html">Determines whether or not blue dot smoothing is used to provide a better visual experience when displaying the user&apos;s location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL blueDotSmoothingEnabled</Declaration>
			
			
			<Anchor>//api/name/blueDotSmoothingEnabled</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/blueDotSmoothingEnabled</TokenIdentifier>
			<Abstract type="html">Determines whether or not blue dot smoothing is used to provide a better visual experience when displaying the user&apos;s location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL blueDotSmoothingEnabled</Declaration>
			
			
			<Anchor>//api/name/blueDotSmoothingEnabled</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setRouteSnappingTolerance:</TokenIdentifier>
			<Abstract type="html">Determines the route snapping behavior of the user&apos;s displayed location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRouteSnapTolerance routeSnappingTolerance</Declaration>
			
			
			<Anchor>//api/name/routeSnappingTolerance</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/routeSnappingTolerance</TokenIdentifier>
			<Abstract type="html">Determines the route snapping behavior of the user&apos;s displayed location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRouteSnapTolerance routeSnappingTolerance</Declaration>
			
			
			<Anchor>//api/name/routeSnappingTolerance</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/routeSnappingTolerance</TokenIdentifier>
			<Abstract type="html">Determines the route snapping behavior of the user&apos;s displayed location.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWRouteSnapTolerance routeSnappingTolerance</Declaration>
			
			
			<Anchor>//api/name/routeSnappingTolerance</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setPointOfInterestCustomizingEnabled:</TokenIdentifier>
			<Abstract type="html">Determines whether or not the point-of-interest(PWPointOfInterest, PWCustomPointOfInterest and PWCustomLocation is able to be customized.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL pointOfInterestCustomizingEnabled</Declaration>
			
			
			<Anchor>//api/name/pointOfInterestCustomizingEnabled</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/pointOfInterestCustomizingEnabled</TokenIdentifier>
			<Abstract type="html">Determines whether or not the point-of-interest(PWPointOfInterest, PWCustomPointOfInterest and PWCustomLocation is able to be customized.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL pointOfInterestCustomizingEnabled</Declaration>
			
			
			<Anchor>//api/name/pointOfInterestCustomizingEnabled</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/pointOfInterestCustomizingEnabled</TokenIdentifier>
			<Abstract type="html">Determines whether or not the point-of-interest(PWPointOfInterest, PWCustomPointOfInterest and PWCustomLocation is able to be customized.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL pointOfInterestCustomizingEnabled</Declaration>
			
			
			<Anchor>//api/name/pointOfInterestCustomizingEnabled</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setUserTrackingBarButtonItem:</TokenIdentifier>
			<Abstract type="html">A property to access the map view user tracking bar button.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) UIBarButtonItem *userTrackingBarButtonItem</Declaration>
			
			
			<Anchor>//api/name/userTrackingBarButtonItem</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/userTrackingBarButtonItem</TokenIdentifier>
			<Abstract type="html">A property to access the map view user tracking bar button.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) UIBarButtonItem *userTrackingBarButtonItem</Declaration>
			
			
			<Anchor>//api/name/userTrackingBarButtonItem</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/userTrackingBarButtonItem</TokenIdentifier>
			<Abstract type="html">A property to access the map view user tracking bar button.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) UIBarButtonItem *userTrackingBarButtonItem</Declaration>
			
			
			<Anchor>//api/name/userTrackingBarButtonItem</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setSharedLocationDisplayName:</TokenIdentifier>
			<Abstract type="html">The display name when sharing location</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sharedLocationDisplayName</Declaration>
			
			
			<Anchor>//api/name/sharedLocationDisplayName</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/sharedLocationDisplayName</TokenIdentifier>
			<Abstract type="html">The display name when sharing location</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sharedLocationDisplayName</Declaration>
			
			
			<Anchor>//api/name/sharedLocationDisplayName</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/sharedLocationDisplayName</TokenIdentifier>
			<Abstract type="html">The display name when sharing location</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sharedLocationDisplayName</Declaration>
			
			
			<Anchor>//api/name/sharedLocationDisplayName</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setSharedLocationUserType:</TokenIdentifier>
			<Abstract type="html">The user type when sharing location</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sharedLocationUserType</Declaration>
			
			
			<Anchor>//api/name/sharedLocationUserType</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/sharedLocationUserType</TokenIdentifier>
			<Abstract type="html">The user type when sharing location</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sharedLocationUserType</Declaration>
			
			
			<Anchor>//api/name/sharedLocationUserType</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/sharedLocationUserType</TokenIdentifier>
			<Abstract type="html">The user type when sharing location</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sharedLocationUserType</Declaration>
			
			
			<Anchor>//api/name/sharedLocationUserType</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setTrackingModeSwitchInterval:</TokenIdentifier>
			<Abstract type="html">The time interval the user stays in PWTrackingModeNone mode, it will automatically change back to the follow mode set by user.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSInteger trackingModeSwitchInterval</Declaration>
			
			
			<Anchor>//api/name/trackingModeSwitchInterval</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/trackingModeSwitchInterval</TokenIdentifier>
			<Abstract type="html">The time interval the user stays in PWTrackingModeNone mode, it will automatically change back to the follow mode set by user.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSInteger trackingModeSwitchInterval</Declaration>
			
			
			<Anchor>//api/name/trackingModeSwitchInterval</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/trackingModeSwitchInterval</TokenIdentifier>
			<Abstract type="html">The time interval the user stays in PWTrackingModeNone mode, it will automatically change back to the follow mode set by user.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSInteger trackingModeSwitchInterval</Declaration>
			
			
			<Anchor>//api/name/trackingModeSwitchInterval</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/initWithFrame:</TokenIdentifier>
			<Abstract type="html">Initializes and returns a newly allocated map view object with the specified frame rectangle.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithFrame:(CGRect)frame</Declaration>
			<Parameters>
				<Parameter>
					<Name>frame</Name>
					<Abstract type="html">The frame rectangle for the view, measured in points. The origin of the frame is relative to the superview in which you plan to add it. This method uses the frame rectangle to set the center and bounds properties accordingly.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new PWMapView object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithFrame:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setBuilding:animated:onCompletion:</TokenIdentifier>
			<Abstract type="html">Allows you to change the building displayed in the map view to the specified building identifier.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setBuilding:(PWBuilding *)building animated:(BOOL)animated onCompletion:(void ( ^ ) ( NSError *error ))completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>building</Name>
					<Abstract type="html">The building to load into the PWMapView.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">Animate the camera zoom into the PWMapView.</Abstract>
				</Parameter><Parameter>
					<Name>completion</Name>
					<Abstract type="html">A block to indicate if the building is successfully displayed or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBuilding:animated:onCompletion:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setTrackingMode:animated:</TokenIdentifier>
			<Abstract type="html">Sets the mode used to track the user&apos;s indoor location with optional animation. This method will have no effect if an indoor location manager has not been registered with the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setTrackingMode:(PWTrackingMode)trackingMode animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>trackingMode</Name>
					<Abstract type="html">The mode used to track the user&apos;s location. Possible values are described in PWTrackingMode.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">If YES, the new mode is animated; otherwise, it is not. This parameter affects only tracking mode changes. Changes to the user&apos;s indoor location or heading are always animated.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setTrackingMode:animated:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/registerLocationManager:</TokenIdentifier>
			<Abstract type="html">Register an indoor location manager provider with the map view. This location provider is used when modifying the indoorUserTrackingMode or when showsIndoorUserLocation is set to YES.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)registerLocationManager:(id&lt;PWLocationManager&gt;)locationManager</Declaration>
			<Parameters>
				<Parameter>
					<Name>locationManager</Name>
					<Abstract type="html">The location manager to register with the map view. The location manager must conform to the PWLocationManager protocol.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerLocationManager:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/unregisterLocationManager</TokenIdentifier>
			<Abstract type="html">Unregister any indoor location manager provider that is registered with the map view.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)unregisterLocationManager</Declaration>
			
			
			<Anchor>//api/name/unregisterLocationManager</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/navigateWithRoute:</TokenIdentifier>
			<Abstract type="html">Load a PWRoute object into the map view. This method will plot a basic route line on the map view. The route object must not be nil.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)navigateWithRoute:(PWRoute *)route</Declaration>
			<Parameters>
				<Parameter>
					<Name>route</Name>
					<Abstract type="html">The PWRoute object to display in the map view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/navigateWithRoute:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setRouteManeuver:</TokenIdentifier>
			<Abstract type="html">Display the specified PWRouteInstruction on the map. If needed, this will change the current floor to the required floor for the instruction.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setRouteManeuver:(PWRouteInstruction *)instruction</Declaration>
			<Parameters>
				<Parameter>
					<Name>instruction</Name>
					<Abstract type="html">The PWRouteInstruction to display.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRouteManeuver:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setRouteManeuver:animated:</TokenIdentifier>
			<Abstract type="html">Display the specified PWRouteInstruction on the map and animates to its position. If needed, this will change the current floor to the required floor for the instruction.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setRouteManeuver:(PWRouteInstruction *)instruction animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>instruction</Name>
					<Abstract type="html">The PWRouteInstruction to display.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">Specify YES if you want the map view to animate the transition to the new instruction.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRouteManeuver:animated:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/currentRouteInstruction</TokenIdentifier>
			<Abstract type="html">Returns the current PWRouteInstruction being displayed. If no route is displayed, this method will return nil.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (PWRouteInstruction *)currentRouteInstruction</Declaration>
			
			<ReturnValue><Abstract type="html">The current PWRouteInstruction. Can be nil if no PWRoute is loaded or if turn-by-turn routing is not being used.</Abstract></ReturnValue>
			<Anchor>//api/name/currentRouteInstruction</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/cancelRouting</TokenIdentifier>
			<Abstract type="html">Cancel the route displayed in the map view. This method will remove the route from the map view and set the PWRoute and PWRouteStep properties to nil.</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)cancelRouting</Declaration>
			
			
			<Anchor>//api/name/cancelRouting</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/startSharingUserLocation</TokenIdentifier>
			<Abstract type="html">Starts sharing the user&apos;s current location</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)startSharingUserLocation</Declaration>
			
			
			<Anchor>//api/name/startSharingUserLocation</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/startRetrievingSharedLocations</TokenIdentifier>
			<Abstract type="html">Starts retrieving other user&apos;s shared locations</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)startRetrievingSharedLocations</Declaration>
			
			
			<Anchor>//api/name/startRetrievingSharedLocations</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/stopSharingUserLocation</TokenIdentifier>
			<Abstract type="html">Stops sharing the user&apos;s current location</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)stopSharingUserLocation</Declaration>
			
			
			<Anchor>//api/name/stopSharingUserLocation</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/stopRetrievingSharedLocations</TokenIdentifier>
			<Abstract type="html">Stops retrieving other user&apos;s shared locations</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)stopRetrievingSharedLocations</Declaration>
			
			
			<Anchor>//api/name/stopRetrievingSharedLocations</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/set__deprecated:</TokenIdentifier>
			<Abstract type="html">A reference to the dropped pin location. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; No longer support, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWCustomLocation *__deprecated</Declaration>
			
			
			<Anchor>//api/name/__deprecated</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/__deprecated</TokenIdentifier>
			<Abstract type="html">A reference to the dropped pin location. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; No longer support, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWCustomLocation *__deprecated</Declaration>
			
			
			<Anchor>//api/name/__deprecated</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PWMapView/__deprecated</TokenIdentifier>
			<Abstract type="html">A reference to the dropped pin location. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; No longer support, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) PWCustomLocation *__deprecated</Declaration>
			
			
			<Anchor>//api/name/__deprecated</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setCenterCoordinate:zoomLevel:animated:</TokenIdentifier>
			<Abstract type="html">Positions the map to the supplied center coordinate with the given zoom level and optional animation. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use setCamera:animated:, setRegion:animated:, setVisibleMapRect:animated: or setVisibleMapRect:edgePadding:animated: instead, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setCenterCoordinate:(CLLocationCoordinate2D)centerCoordinate zoomLevel:(NSUInteger)zoomLevel animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>centerCoordinate</Name>
					<Abstract type="html">A CLLocationCoordinate2D object representing the latitude an longitude the map should zoom to.</Abstract>
				</Parameter><Parameter>
					<Name>zoomLevel</Name>
					<Abstract type="html">A NSUInteger value representing zoom level the map should zoom to.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s center should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCenterCoordinate:zoomLevel:animated:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/setFloor:</TokenIdentifier>
			<Abstract type="html">A convenient method to set current floor, it&apos;s working exactly the same as setCurrentFloor:. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use currentFloor instead, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)setFloor:(PWFloor *)floor</Declaration>
			<Parameters>
				<Parameter>
					<Name>floor</Name>
					<Abstract type="html">A PWFloor object you want to set.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setFloor:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/startUpdatingHeading</TokenIdentifier>
			<Abstract type="html">Starts heading updates. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Create your own CLLocationManager for heading service, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)startUpdatingHeading</Declaration>
			
			
			<Anchor>//api/name/startUpdatingHeading</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/stopUpdatingHeading</TokenIdentifier>
			<Abstract type="html">Stops heading updates. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Create your own CLLocationManager for heading service, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)stopUpdatingHeading</Declaration>
			
			
			<Anchor>//api/name/stopUpdatingHeading</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/navigateToCustomLocation:</TokenIdentifier>
			<Abstract type="html">Repositions the map&apos;s view to a custom location. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use setCamera:animated: or setCenter:animated: instead, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)navigateToCustomLocation:(PWCustomLocation *)location</Declaration>
			<Parameters>
				<Parameter>
					<Name>location</Name>
					<Abstract type="html">A custom location reference where the map should navigate to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/navigateToCustomLocation:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/navigateToPointOfInterest:</TokenIdentifier>
			<Abstract type="html">Repositions the map&apos;s view to an specific point-of-interest. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use setCamera:animated: or setCenter:animated: instead, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)navigateToPointOfInterest:(PWPointOfInterest *)poi</Declaration>
			<Parameters>
				<Parameter>
					<Name>poi</Name>
					<Abstract type="html">A point-of-interest reference where the map should navigate to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/navigateToPointOfInterest:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/viewForPointOfInterest:</TokenIdentifier>
			<Abstract type="html">Returns the annotation view of a PointOfInterest. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use viewForAnnotation: or setCenter:animated: instead, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (PWBuildingAnnotationView *)viewForPointOfInterest:(PWPointOfInterest *)poi</Declaration>
			<Parameters>
				<Parameter>
					<Name>poi</Name>
					<Abstract type="html">The point-of-interest. This parameter must not be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/viewForPointOfInterest:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/showPointsOfInterest:</TokenIdentifier>
			<Abstract type="html">Displays the array of Points of Interest, causing the map view to zoom in/out to contain all of the points of interest. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use showAnnotations:animated: instead, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)showPointsOfInterest:(NSArray *)pois</Declaration>
			<Parameters>
				<Parameter>
					<Name>pois</Name>
					<Abstract type="html">An array of PWPointOfInterest objects that should be displayed on the map.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/showPointsOfInterest:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/selectPointOfInterest:animated:</TokenIdentifier>
			<Abstract type="html">Selects a PointOfInterest on the map. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use selectAnnotations:animated: instead, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)selectPointOfInterest:(PWPointOfInterest *)poi animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>poi</Name>
					<Abstract type="html">A PointOfInterest to select on the map.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s region should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/selectPointOfInterest:animated:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PWMapView/deselectPointOfInterest:animated:</TokenIdentifier>
			<Abstract type="html">Deselects a PointOfInterest on the map. If the POI is not selected, this method does nothing (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use deselectAnnotations:animated: instead, since v3.2.0&lt;/span&gt;)</Abstract>
			<DeclaredIn>PWMapView.h</DeclaredIn>
			
			<Declaration>- (void)deselectPointOfInterest:(PWPointOfInterest *)poi animated:(BOOL)animated</Declaration>
			<Parameters>
				<Parameter>
					<Name>poi</Name>
					<Abstract type="html">A PointOfInterest to deselect on the map.</Abstract>
				</Parameter><Parameter>
					<Name>animated</Name>
					<Abstract type="html">A BOOL property to determine whether the change of map&apos;s region should be animated or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deselectPointOfInterest:animated:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
        
	</File>
</Tokens>